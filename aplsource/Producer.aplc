:Class Producer
    :field public shared kafka
    :field private prod
    :field private outstanding

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
    ⍝ Constructor
    ∇ make
      :Access Public
      :Implements constructor
      prod←kafka.new
      outstanding←0 2⍴0
    ∇

    ∇ make_config config;i;opt;val
      :Access Public
      :Implements constructor
      prod←kafka.new
      :If (2=⍴⍴config)∧(2=¯1↑⍴config)
          configure¨↓config
      :Else
       ⍝ todo error
      :EndIf
      outstanding←0 2⍴0
    ∇

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
    ⍝ Destructor
    ∇ unmake;_
      :Implements destructor
      _←kafka.UninitProducer prod
    ∇

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
    ⍝ Configuration Settings
    ∇ r←configure(opt val)
      :Access public
      r←kafka.setconf(prod opt val)
    ∇

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
    ⍝ Producer    
    

    ∇ r←produce arg;topic;payload;key;partition;z;msgid;err
    (topic payload key partition)←4↑ arg,  (≢arg)↓ '' '' '' ¯1
      :Access public
      (z msgid err)←kafka.produce prod topic payload key partition
      r←z,msgid
      :If z=0
        outstanding⍪←msgid 0
      :EndIf
    ∇


    ∇ r←produce_record record;err;msgid;z
      :Access public
      (z msgid err)←kafka.produce prod, record.asArg
      r←z,msgid
      :If z=0
        outstanding⍪←msgid 0
      :EndIf
    ∇

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
    ⍝ Delivery reports
    ∇ r←delivery_report length;len;err;msgid;z
      :Access public
      (z msgid err len)←kafka.delivery prod length
      r←z((len↑msgid),[1.5](len↑err))
    ∇

    ∇ r←update_outstanding;err;del;ok;ix;outstanding_err
      :Access public                    
      :While 1
          (err del)←delivery_report 100
     
          :If 0=err
          :AndIf 0<≢del
              ok←0=del[;2]
              outstanding←(~outstanding[;1]∊ok/del[;1])⌿outstanding
              ix←(outstanding[;1]⍳(~ok)/del[;1])~1+≢outstanding
              outstanding[ix;2]←(~ok)/del[;2]
          :Else
              :Leave
          :EndIf
      :EndWhile
      outstanding_err←outstanding
      outstanding←(0=outstanding[;2])⌿outstanding 
      r←err outstanding_err
    ∇

    ∇ r←delivery_report_err length;len;err;msgid;z
      :Access public
      (z msgid err len)←kafka.delivery prod  length
     
      r←z,((len↑msgid),[1.5](len↑err))
      r←r[⍸0≠r[;3];]
    ∇


    ∇ r←parse_error errid
      :Access public
      r←kafka.errormsg(errid)
    ∇

    ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ Helpers
    ∇ r←get_producer
      :Access public
      r←prod
    ∇

:EndClass

